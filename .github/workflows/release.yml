on:
  release:
    types: [ created ]

jobs:
  release:
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux-x86_64
            target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest

          - name: macOS-universal
            target: universal-apple-darwin
            runner: macos-latest

          - name: Windows-x86_64
            target: x86_64-pc-windows-msvc
            runner: windows-latest

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v3

      - name: Update and Install Dependencies (Linux)
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libhidapi-dev libayatana-appindicator3-dev libsoup-3.0-dev javascriptcoregtk-4.1-dev librsvg2-dev

      - name: Install libffi6
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        run: |
          curl -LO http://archive.ubuntu.com/ubuntu/pool/main/libf/libffi/libffi6_3.2.1-8_amd64.deb
          sudo dpkg -i libffi6_3.2.1-8_amd64.deb

      - name: Install libcroco3
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        run: |
          curl -LO https://archive.ubuntu.com/ubuntu/pool/main/libc/libcroco/libcroco3_0.6.13-1ubuntu0.1_amd64.deb
          sudo dpkg -i 	libcroco3_0.6.13-1ubuntu0.1_amd64.deb

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Rust Toolchain
        run: rustup update stable

      - name: Add Rust Target (macOS)
        if: ${{ matrix.runner == 'macos-latest' }}
        run: rustup target add x86_64-apple-darwin

      - name: Add Rust Target (Other)
        if: ${{ matrix.runner != 'macos-latest' }}
        run: rustup target add ${{ matrix.target }}

      - name: Install Tauri CLI
        run: |
          rustup toolchain install 1.79
          rustup run 1.79 cargo install --locked --git https://github.com/Shays-Forks/tauri.git tauri-cli

      - name: Build Tauri Installers/Bundles/Images
        uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          NO_STRIP: true
        with:
          args: --target ${{ matrix.target }} --verbose
          releaseId: ${{ github.event.release.id }}
          tagName: ${{ github.ref_name }}
          tauriScript: "cargo tauri"

      - name: Build Portable Binary (Windows)
        if: ${{ matrix.runner == 'windows-latest' }}
        run: |
          cargo build --target ${{ matrix.target }}
          mv ./target/${{ matrix.target }}/debug/wooting-profile-switcher.exe ./target/${{ matrix.target }}/debug/wooting-profile-switcher_${{ github.ref_name }}_x64-portable.exe

      - name: Upload Portable Binary (Windows)
        if: ${{ matrix.runner == 'windows-latest' }}
        run: bash -c 'gh release upload ${{ github.ref_name }} ./target/${{ matrix.target }}/debug/wooting-profile-switcher_${{ github.ref_name }}_x64-portable.exe --clobber'
